<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Â∏∏ËßÅÊ§çÁâ©ÁßëÊôÆÁΩë</title>
    <style>
        :root {
            --primary-green: #7C9D8E;
            --light-green: #A8C1B4;
            --pale-green: #F0F4F1;
            --accent-green: #94B0A9;
            --text-color: #4A5D54;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 10% 20%, var(--pale-green) 1px, transparent 1px),
                radial-gradient(circle at 90% 80%, var(--pale-green) 1px, transparent 1px);
            background-size: 50px 50px;
            opacity: 0.3;
            z-index: -1;
        }

        body {
            font-family: 'Microsoft YaHei', sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--pale-green);
            color: #333;
        }

        .container {
            position: relative;
            background-color: rgba(255, 255, 255, 0.95);
        }

        .container::before,
        .container::after {
            content: '';
            position: absolute;
            width: 50px;
            height: 50px;
            border: 2px solid var(--light-green);
            opacity: 0.6;
        }

        .container::before {
            top: 20px;
            left: 20px;
            border-right: none;
            border-bottom: none;
        }

        .container::after {
            bottom: 20px;
            right: 20px;
            border-left: none;
            border-top: none;
        }

        header {
            background: linear-gradient(135deg, var(--primary-green), var(--light-green));
            color: white;
            padding: 40px 0;
            text-align: center;
            position: relative;
        }

        header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 5px;
            background-color: var(--light-green);
        }

        h1 {
            margin: 0;
            font-size: 2.5em;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        nav {
            background: var(--primary-green);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 15px 0;
        }

        nav ul {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            gap: 30px;
        }

        nav a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            padding: 5px 15px;
            border-radius: 20px;
            transition: background-color 0.3s;
        }

        nav a:hover {
            background-color: var(--primary-green);
        }

        main {
            padding: 30px;
        }

        .plant-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .plant-card {
            position: relative;
            overflow: hidden;
            background-color: rgba(255, 255, 255, 0.9);
            border: 1px solid var(--light-green);
            border-radius: 10px;
            padding: 20px;
            transition: transform 0.3s;
        }

        .plant-card:hover {
            transform: translateY(-5px);
        }

        .plant-card::before {
            content: 'üåø';
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 20px;
            opacity: 0.2;
        }

        .view-more {
            background: linear-gradient(135deg, var(--primary-green), var(--light-green));
            border: none;
            padding: 10px 20px;
            color: white;
            border-radius: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .view-more:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.15);
        }

        nav ul li a {
            position: relative;
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 50%;
            width: 0;
            height: 2px;
            background: white;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        /* ËΩÆÊí≠ÂõæÊ†∑Âºè */
        .slideshow-container {
            max-width: 100%;
            position: relative;
            margin: 40px auto 20px;
            overflow: hidden;
            height: 400px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        }

        .slides {
            display: flex;
            transition: transform 0.5s ease;
            height: 100%;
        }

        .slide {
            min-width: 100%;
            height: 100%;
        }

        .slide img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .prev, .next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            padding: 16px;
            color: var(--primary-green);
            font-weight: bold;
            font-size: 24px;
            transition: 0.3s ease;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.8);
            border: 1px solid var(--light-green);
            z-index: 1;
        }

        .prev { left: 20px; }
        .next { right: 20px; }

        .prev:hover, .next:hover {
            background: var(--light-green);
            color: white;
        }

        .dots {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 8px;
        }

        .dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: var(--light-green);
            opacity: 0.5;
            cursor: pointer;
            transition: opacity 0.3s ease;
        }

        .dot.active {
            opacity: 1;
        }

        .slideshow-title {
            text-align: center;
            color: var(--primary-green);
            margin-top: 40px;
            margin-bottom: 20px;
            font-size: 1.8em;
            position: relative;
            display: inline-block;
            padding-bottom: 10px;
        }

        .slideshow-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--light-green);
        }

        .games-section {
            padding: 40px 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            margin-top: 40px;
        }

        .section-title {
            text-align: center;
            color: var(--primary-green);
            margin-bottom: 30px;
        }

        .game-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            border: 1px solid var(--light-green);
        }

        .game-card h3 {
            color: var(--primary-green);
            margin-top: 0;
        }

        .game-button {
            background: var(--light-green);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .game-button:hover {
            background: var(--primary-green);
            transform: translateY(-2px);
        }

        .memory-game {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
            margin: 20px 0;
        }

        .memory-card {
            aspect-ratio: 1;
            background: var(--pale-green);
            border-radius: 5px;
            cursor: pointer;
            transition: transform 0.3s;
        }

        .memory-card.flipped {
            transform: rotateY(180deg);
        }

        .quiz-container {
            margin: 20px 0;
        }

        .quiz-option {
            background: var(--pale-green);
            padding: 10px;
            margin: 5px 0;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .quiz-option:hover {
            background: var(--light-green);
            color: white;
        }

        #result {
            margin-top: 15px;
            font-weight: bold;
            text-align: center;
        }

        .ai-assistant-section {
            padding: 40px 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            margin-top: 40px;
            margin-bottom: 40px;
        }

        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            border: 1px solid var(--light-green);
        }

        .chat-messages {
            height: 400px;
            overflow-y: auto;
            padding: 20px;
        }

        .message {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .message.user {
            flex-direction: row-reverse;
        }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--pale-green);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 10px;
            font-size: 20px;
        }

        .message.user .avatar {
            background: var(--light-green);
        }

        .text {
            background: var(--pale-green);
            padding: 12px;
            border-radius: 12px;
            max-width: 70%;
            line-height: 1.5;
        }

        .message.user .text {
            background: var(--light-green);
            color: white;
        }

        .chat-input {
            display: flex;
            padding: 15px;
            border-top: 1px solid var(--pale-green);
        }

        .chat-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid var(--light-green);
            border-radius: 20px;
            margin-right: 10px;
            font-size: 16px;
        }

        .send-button {
            background: var(--light-green);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .send-button:hover {
            background: var(--primary-green);
        }

        .quick-questions {
            padding: 15px;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            justify-content: center;
            border-top: 1px solid var(--pale-green);
        }

        .quick-questions button {
            background: var(--pale-green);
            border: 1px solid var(--light-green);
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
            color: var(--text-color);
        }

        .quick-questions button:hover {
            background: var(--light-green);
            color: white;
        }

        .floating-assistant {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 300px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 20px rgba(0,0,0,0.2);
            z-index: 1000;
            display: none;
            border: 1px solid var(--light-green);
            transition: all 0.3s ease;
        }

        .assistant-header {
            background: var(--primary-green);
            color: white;
            padding: 12px;
            border-radius: 12px 12px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: move;
        }

        .header-buttons {
            display: flex;
            gap: 8px;
        }

        .minimize-btn, .close-btn {
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            font-size: 16px;
            padding: 0 5px;
            transition: all 0.3s;
        }

        .minimize-btn:hover, .close-btn:hover {
            opacity: 0.8;
        }

        .assistant-body {
            height: 400px;
            display: flex;
            flex-direction: column;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 15px;
        }

        .assistant-trigger {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--primary-green);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 30px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 999;
            transition: all 0.3s ease;
        }

        .assistant-trigger:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .trigger-icon {
            font-size: 20px;
        }

        /* Ë∞ÉÊï¥ËÅäÂ§©ÁïåÈù¢Ê†∑Âºè */
        .chat-input {
            padding: 10px;
            border-top: 1px solid var(--pale-green);
        }

        .quick-questions {
            padding: 10px;
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            border-top: 1px solid var(--pale-green);
        }

        .quick-questions button {
            font-size: 12px;
            padding: 5px 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Â∏∏ËßÅÊ§çÁâ©ÁßëÊôÆÁΩë</h1>
        </header>
        <nav>
            <ul>
                <li><a href="#home">È¶ñÈ°µ</a></li>
                <li><a href="plant-guide.html">Ê§çÁâ©ÂõæÈâ¥</a></li>
                <li><a href="gardening-tips.html">Âõ≠Ëâ∫ÊäÄÂ∑ß</a></li>
                <li><a href="#about">ÂÖ≥‰∫éÊàë‰ª¨</a></li>
            </ul>
        </nav>
        <main>
            <div class="plant-grid">
                <div class="plant-card">
                    <h2>ÂÆ§ÂÜÖÊ§çÁâ©</h2>
                    <p>ÈÄÇÂêàÂÆ§ÂÜÖÁßçÊ§çÁöÑËßÇËµèÊ§çÁâ©‰ªãÁªç</p>
                    <a href="indoor-plants.html" style="
                        display: inline-block;
                        margin-top: 10px;
                        padding: 8px 15px;
                        background-color: var(--light-green);
                        color: white;
                        text-decoration: none;
                        border-radius: 5px;
                        transition: background-color 0.3s;">
                        Êü•ÁúãËØ¶ÊÉÖ
                    </a>
                </div>
                <div class="plant-card">
                    <h2>Êà∑Â§ñÊ§çÁâ©</h2>
                    <p>Â∫≠Èô¢ÂíåÈò≥Âè∞ÂêàÁßçÊ§çÁöÑÊ§çÁâ©</p>
                    <a href="outdoor-plants.html" style="
                        display: inline-block;
                        margin-top: 10px;
                        padding: 8px 15px;
                        background-color: var(--light-green);
                        color: white;
                        text-decoration: none;
                        border-radius: 5px;
                        transition: background-color 0.3s;">
                        Êü•ÁúãËØ¶ÊÉÖ
                    </a>
                </div>
                <div class="plant-card">
                    <h2>Â§öËÇâÊ§çÁâ©</h2>
                    <p>ÂêÑÁ±ªÂ§öËÇâÊ§çÁâ©ÁöÑÂÖªÊä§ÊåáÂçó</p>
                    <a href="succulent-plants.html" style="
                        display: inline-block;
                        margin-top: 10px;
                        padding: 8px 15px;
                        background-color: var(--light-green);
                        color: white;
                        text-decoration: none;
                        border-radius: 5px;
                        transition: background-color 0.3s;">
                        Êü•ÁúãËØ¶ÊÉÖ
                    </a>
                </div>
            </div>

            <h2 class="slideshow-title">Ê§çÁâ©ÁßëÊôÆÁªòÊú¨</h2>

            <div class="slideshow-container">
                <div class="slides">
                    <div class="slide"><img src="images/ÁªòÊú¨1.png" alt="ÁªòÊú¨1"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨2.png" alt="ÁªòÊú¨2"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨3.png" alt="ÁªòÊú¨3"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨4.png" alt="ÁªòÊú¨4"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨5.png" alt="ÁªòÊú¨5"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨6.png" alt="ÁªòÊú¨6"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨7.png" alt="ÁªòÊú¨7"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨8.png" alt="ÁªòÊú¨8"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨9.png" alt="ÁªòÊú¨9"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨10.png" alt="ÁªòÊú¨10"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨11.png" alt="ÁªòÊú¨11"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨12.png" alt="ÁªòÊú¨12"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨13.png" alt="ÁªòÊú¨13"></div>
                    <div class="slide"><img src="images/ÁªòÊú¨14.png" alt="ÁªòÊú¨14"></div>
                </div>
                <button class="prev">‚ùÆ</button>
                <button class="next">‚ùØ</button>
                <div class="dots"></div>
            </div>

            <section class="games-section">
                <h2 class="section-title">Ë∂£Âë≥Ê§çÁâ©Â∞èÊ∏∏Êàè</h2>
                
                <!-- Ê§çÁâ©ÈÖçÂØπÊ∏∏Êàè -->
                <div class="game-card">
                    <h3>Ê§çÁâ©ÈÖçÂØπÊ∏∏Êàè</h3>
                    <p>ËÄÉÈ™åËÆ∞ÂøÜÂäõÔºåÊâæÂá∫Áõ∏ÂêåÁöÑÊ§çÁâ©ÂõæÁâá</p>
                    <div class="memory-game" id="memoryGame">
                        <!-- Ê∏∏ÊàèÂç°ÁâáÂ∞ÜÈÄöËøáJSÂä®ÊÄÅÁîüÊàê -->
                    </div>
                    <button class="game-button" onclick="startMemoryGame()">ÂºÄÂßãÊ∏∏Êàè</button>
                </div>

                <!-- Ê§çÁâ©Áü•ËØÜÈóÆÁ≠î -->
                <div class="game-card">
                    <h3>Ê§çÁâ©Áü•ËØÜÈóÆÁ≠î</h3>
                    <p>ÊµãËØï‰Ω†ÁöÑÊ§çÁâ©Áü•ËØÜ</p>
                    <div class="quiz-container" id="quizContainer">
                        <div id="question"></div>
                        <div id="options"></div>
                        <div id="result"></div>
                    </div>
                    <button class="game-button" onclick="startQuiz()">ÂºÄÂßãÁ≠îÈ¢ò</button>
                </div>
            </section>

            <div class="floating-assistant" id="floatingAssistant">
                <div class="assistant-header">
                    <span class="assistant-title">üå± Ê§çÁâ©ÁßëÊôÆÂä©Êâã</span>
                    <div class="header-buttons">
                        <button class="minimize-btn" onclick="toggleAssistant()">_</button>
                        <button class="close-btn" onclick="closeAssistant()">√ó</button>
                    </div>
                </div>
                <div class="assistant-body">
                    <div class="chat-messages" id="chatMessages">
                        <div class="message bot">
                            <div class="avatar">üå±</div>
                            <div class="text">‰Ω†Â•ΩÔºÅÊàëÊòØÊ§çÁâ©ÁßëÊôÆÂä©ÊâãÔºåÂæàÈ´òÂÖ¥‰∏∫ÊÇ®Ëß£Á≠îÂÖ≥‰∫éÊ§çÁâ©ÁöÑÈóÆÈ¢ò„ÄÇ</div>
                        </div>
                    </div>
                    <div class="chat-input">
                        <input type="text" id="userInput" placeholder="ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...">
                        <button onclick="sendMessage()" class="send-button">ÂèëÈÄÅ</button>
                    </div>
                    <div class="quick-questions">
                        <button onclick="askQuestion('Â¶Ç‰ΩïÂÖªÊä§Â§öËÇâÊ§çÁâ©Ôºü')">Â§öËÇâÂÖªÊä§</button>
                        <button onclick="askQuestion('ÂÆ§ÂÜÖÊ§çÁâ©ÊÄé‰πàÊµáÊ∞¥Ôºü')">ÊµáÊ∞¥ÊñπÊ≥ï</button>
                        <button onclick="askQuestion('Ê§çÁâ©ÈªÑÂè∂ÊÄé‰πàÂäûÔºü')">ÈªÑÂè∂Â§ÑÁêÜ</button>
                        <button onclick="askQuestion('Êñ∞ÊâãÈÄÇÂêàÂÖª‰ªÄ‰πàÊ§çÁâ©Ôºü')">Êñ∞ÊâãÊåáÂçó</button>
                        <button onclick="askQuestion('Âì™‰∫õÊ§çÁâ©ËÉΩÂáÄÂåñÁ©∫Ê∞îÔºü')">ÂáÄÂåñÁ©∫Ê∞î</button>
                    </div>
                </div>
            </div>

            <button class="assistant-trigger" onclick="toggleAssistant()" id="assistantTrigger">
                <span class="trigger-icon">üå±</span>
                <span class="trigger-text">Ê§çÁâ©Âä©Êâã</span>
            </button>
        </main>
    </div>
    <script>
        const slides = document.querySelector('.slides');
        const slideItems = document.querySelectorAll('.slide');
        const prevBtn = document.querySelector('.prev');
        const nextBtn = document.querySelector('.next');
        const dotsContainer = document.querySelector('.dots');
        
        let currentSlide = 0;
        const totalSlides = slideItems.length;

        // ÂàõÂª∫ÂØºËà™ÁÇπ
        slideItems.forEach((_, index) => {
            const dot = document.createElement('div');
            dot.classList.add('dot');
            if (index === 0) dot.classList.add('active');
            dot.addEventListener('click', () => goToSlide(index));
            dotsContainer.appendChild(dot);
        });

        const dots = document.querySelectorAll('.dot');

        // Êõ¥Êñ∞ÂØºËà™ÁÇπÁä∂ÊÄÅ
        function updateDots() {
            dots.forEach((dot, index) => {
                dot.classList.toggle('active', index === currentSlide);
            });
        }

        // ÂàáÊç¢Âà∞ÊåáÂÆöÂπªÁÅØÁâá
        function goToSlide(index) {
            currentSlide = index;
            slides.style.transform = `translateX(-${currentSlide * 100}%)`;
            updateDots();
        }

        // ‰∏ã‰∏ÄÂº†ÂπªÁÅØÁâá
        function nextSlide() {
            currentSlide = (currentSlide + 1) % totalSlides;
            goToSlide(currentSlide);
        }

        // ‰∏ä‰∏ÄÂº†ÂπªÁÅØÁâá
        function prevSlide() {
            currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
            goToSlide(currentSlide);
        }

        // Ê∑ªÂä†ÊåâÈíÆ‰∫ã‰ª∂ÁõëÂê¨
        prevBtn.addEventListener('click', prevSlide);
        nextBtn.addEventListener('click', nextSlide);

        // Ëá™Âä®Êí≠Êîæ
        let slideInterval = setInterval(nextSlide, 5000);

        // Èº†Ê†áÊÇ¨ÂÅúÊó∂ÊöÇÂÅúËá™Âä®Êí≠Êîæ
        const slideshow = document.querySelector('.slideshow-container');
        slideshow.addEventListener('mouseenter', () => clearInterval(slideInterval));
        slideshow.addEventListener('mouseleave', () => {
            slideInterval = setInterval(nextSlide, 5000);
        });

        // Ê§çÁâ©ÈÖçÂØπÊ∏∏ÊàèÊï∞ÊçÆ
        const plantPairs = [
            {name: 'ÁªøËêù', image: 'images/lvluo.jpg'},
            {name: 'Â§öËÇâ', image: 'images/lhz.jpg'},
            {name: 'Áª£ÁêÉ', image: 'images/ÁªòÊú¨1.png'},
            {name: 'ÊúàÂ≠£', image: 'images/ÁªòÊú¨2.png'},
            {name: 'ËåâËéâ', image: 'images/ÁªòÊú¨3.png'},
            {name: 'Êï£Â∞æËëµ', image: 'images/ÁªòÊú¨4.png'}
        ];

        // Ê§çÁâ©Áü•ËØÜÈóÆÁ≠îÊï∞ÊçÆ
        const quizQuestions = [
            {
                question: '‰ª•‰∏ãÂì™ÁßçÊ§çÁâ©ÊúÄÈÄÇÂêàÂÆ§ÂÜÖÂÖªÊä§Ôºü',
                options: ['ÁªøËêù', 'ÂêëÊó•Ëëµ', 'Áâ°‰∏π', 'ÊúàÂ≠£'],
                correct: 0
            },
            {
                question: 'Â§öËÇâÊ§çÁâ©ÂñúÊ¨¢ÊÄéÊ†∑ÁöÑÊµáÊ∞¥ÊñπÂºèÔºü',
                options: ['ÊØèÂ§©ÊµáÊ∞¥', 'ÁúãÂúüÂπ≤‰∫ÜÂÜçÊµá', '‰∏ÄÂë®Êµá‰∏ÄÊ¨°', 'Âçä‰∏™ÊúàÊµá‰∏ÄÊ¨°'],
                correct: 1
            },
            {
                question: '‰ª•‰∏ãÂì™ÁßçÊ§çÁâ©ÊúÄËÄêÈò¥Ôºü',
                options: ['‰ªô‰∫∫Êéå', 'ËôéÁöÆÂÖ∞', 'ÂêëÊó•Ëëµ', 'ÊúàÂ≠£'],
                correct: 1
            }
        ];

        function startMemoryGame() {
            const memoryGame = document.getElementById('memoryGame');
            memoryGame.innerHTML = '';
            
            // ÂàõÂª∫ÈÖçÂØπÂç°Áâá
            const cards = [...plantPairs, ...plantPairs].sort(() => Math.random() - 0.5);
            cards.forEach((plant, index) => {
                const card = document.createElement('div');
                card.className = 'memory-card';
                card.dataset.index = index;
                card.dataset.name = plant.name;
                card.onclick = flipCard;
                memoryGame.appendChild(card);
            });
        }

        let flippedCards = [];
        function flipCard() {
            if (flippedCards.length === 2) return;
            if (this.classList.contains('flipped')) return;
            
            this.style.background = `url(${plantPairs.find(p => p.name === this.dataset.name).image}) center/cover`;
            this.classList.add('flipped');
            flippedCards.push(this);

            if (flippedCards.length === 2) {
                setTimeout(checkMatch, 1000);
            }
        }

        function checkMatch() {
            const [card1, card2] = flippedCards;
            const match = card1.dataset.name === card2.dataset.name;
            
            if (match) {
                card1.style.opacity = '0.7';
                card2.style.opacity = '0.7';
                card1.onclick = null;
                card2.onclick = null;
                flippedCards = [];
            } else {
                setTimeout(() => {
                    card1.style.background = '';
                    card2.style.background = '';
                    card1.classList.remove('flipped');
                    card2.classList.remove('flipped');
                    flippedCards = [];
                }, 500);
            }
        }

        function startQuiz() {
            let currentQuestion = 0;
            const quizContainer = document.getElementById('quizContainer');
            const questionEl = document.getElementById('question');
            const optionsEl = document.getElementById('options');
            const resultEl = document.getElementById('result');

            function showQuestion() {
                const q = quizQuestions[currentQuestion];
                questionEl.textContent = q.question;
                optionsEl.innerHTML = '';
                q.options.forEach((option, index) => {
                    const button = document.createElement('div');
                    button.className = 'quiz-option';
                    button.textContent = option;
                    button.onclick = () => checkAnswer(index);
                    optionsEl.appendChild(button);
                });
                resultEl.textContent = '';
            }

            function checkAnswer(answer) {
                const correct = quizQuestions[currentQuestion].correct;
                if (answer === correct) {
                    resultEl.textContent = 'ÂõûÁ≠îÊ≠£Á°ÆÔºÅ';
                    resultEl.style.color = 'green';
                } else {
                    resultEl.textContent = 'ÂõûÁ≠îÈîôËØØÔºåËØ∑ÈáçËØïÔºÅ';
                    resultEl.style.color = 'red';
                }
                setTimeout(() => {
                    currentQuestion = (currentQuestion + 1) % quizQuestions.length;
                    showQuestion();
                }, 1500);
            }

            showQuestion();
        }

        // Ê§çÁâ©Áü•ËØÜÂ∫ì
        const plantKnowledge = {
            'Â§öËÇâÊ§çÁâ©': {
                'ÂÖªÊä§': 'Â§öËÇâÊ§çÁâ©ÂñúÊ¨¢ÂÖÖË∂≥ÁöÑÂÖâÁÖßÔºå‰ΩÜË¶ÅÈÅøÂÖçÁÉàÊó•Áõ¥Â∞Ñ„ÄÇÊµáÊ∞¥Ë¶ÅÈÅµÂæ™"ÂÆÅÂπ≤ÂãøÊπø"ÁöÑÂéüÂàôÔºåÂúüÂ£§ÂÆåÂÖ®Âπ≤Áá•ÂêéÂÜçÊµáÊ∞¥„ÄÇ',
                'ÊµáÊ∞¥': 'Â§öËÇâÊ§çÁâ©ÊµáÊ∞¥Ë¶ÅÈÄÇÈáèÔºå‰∏ÄËà¨7-10Â§©Êµá‰∏ÄÊ¨°Ê∞¥ÔºåÂÖ∑‰ΩìË¶ÅÊ†πÊçÆÂ≠£ËäÇÂíåÁéØÂ¢ÉË∞ÉÊï¥„ÄÇÂ§èÂ≠£ÂèØ‰ª•ÈÄÇÂΩìÂ¢ûÂä†ÊµáÊ∞¥È¢ëÁéáÔºåÂÜ¨Â≠£ÂàôË¶ÅÂáèÂ∞ë„ÄÇ',
                'ÂÖâÁÖß': 'Â§öËÇâÊ§çÁâ©ÈúÄË¶ÅÂÖÖË∂≥ÁöÑÊï£Â∞ÑÂÖâÔºåÊó©ÊôöÂêÑ2-3Â∞èÊó∂ÁöÑÁõ¥Â∞ÑÈò≥ÂÖâÊúÄ‰Ω≥„ÄÇÁßãÂÜ¨Â≠£ËäÇË¶ÅÂ¢ûÂä†ÂÖâÁÖßÊó∂Èó¥„ÄÇ',
                'ÂúüÂ£§': 'Â§öËÇâÊ§çÁâ©ÈúÄË¶ÅÁñèÊùæÈÄèÊ∞îÁöÑÂúüÂ£§ÔºåÂèØ‰ª•‰ΩøÁî®‰∏ìÁî®Â§öËÇâÂúüÔºåÊàñÊ∑∑ÂêàÊ≥•ÁÇ≠Âúü„ÄÅÁèçÁè†Â≤©ÂíåÊ≤≥Ê≤ô„ÄÇ',
                'ÁπÅÊÆñ': 'Â§öËÇâÊ§çÁâ©ÂèØ‰ª•ÈÄöËøáÂè∂Êèí„ÄÅÊâ¶Êèí„ÄÅÂàÜÊ†™Á≠âÊñπÂºèËøõË°åÁπÅÊÆñÔºåÊò•Â≠£ÂíåÁßãÂ≠£ÊòØÊúÄ‰Ω≥ÁπÅÊÆñÊó∂Èó¥„ÄÇ'
            },
            'ÂÆ§ÂÜÖÊ§çÁâ©': {
                'ÊµáÊ∞¥': 'ÂÆ§ÂÜÖÊ§çÁâ©ÊµáÊ∞¥Ë¶ÅÊ†πÊçÆ‰∏çÂêåÊ§çÁâ©ÁöÑÈúÄÊ±ÇÊù•ÂÆöÔºå‰∏ÄËà¨ÊòØÁúãË°®ÂúüÂπ≤‰∫ÜÂÜçÊµáÊ∞¥ÔºåÊµáÈÄè‰∏çÊµáÊª°„ÄÇÊó©ÊôöÊµáÊ∞¥ÊïàÊûúÊúÄÂ•Ω„ÄÇ',
                'ÂÖâÁÖß': 'Â§ßÂ§öÊï∞ÂÆ§ÂÜÖÊ§çÁâ©ÂñúÊ¨¢Êòé‰∫ÆÁöÑÊï£Â∞ÑÂÖâÔºåÈÅøÂÖçÂº∫ÂÖâÁõ¥Â∞Ñ„ÄÇÂèØ‰ª•Ê†πÊçÆÂè∂ÁâáÈ¢úËâ≤Âà§Êñ≠ÂÖâÁÖßÊòØÂê¶ÂêàÈÄÇ„ÄÇ',
                'ÊñΩËÇ•': 'ÁîüÈïøÂ≠£ËäÇÊØèÊúàÊñΩËÇ•1-2Ê¨°ÔºåÂÜ¨Â≠£ÂèØ‰ª•ÂÅúÊ≠¢ÊñΩËÇ•„ÄÇ‰ΩøÁî®ËñÑËÇ•Â§öÊñΩÁöÑÂéüÂàôÔºåÈÅøÂÖçÁÉßÊ†π„ÄÇ',
                'Êç¢ÁõÜ': 'ÂΩìÊ§çÁâ©Ê†πÁ≥ª‰ªéÊéíÊ∞¥Â≠îÈïøÂá∫ÊàñÁîüÈïøÊòéÊòæÂèòÊÖ¢Êó∂ÔºåÂ∞±ÈúÄË¶ÅÊç¢ÁõÜ„ÄÇ‰∏ÄËà¨Êò•Â≠£Êç¢ÁõÜÊúÄÈÄÇÂÆú„ÄÇ',
                '‰øÆÂâ™': 'ÂÆöÊúü‰øÆÂâ™ÂèØ‰ª•‰øùÊåÅÊ§çÁâ©ÂΩ¢ÊÄÅÁæéËßÇÔºå‰øÉËøõÂàÜÊûù„ÄÇ‰øÆÂâ™Êó∂Ë¶ÅÁî®Ê∏ÖÊ¥ÅÁöÑÂ∑•ÂÖ∑ÔºåÈÅøÂÖçÊÑüÊüì„ÄÇ'
            },
            'Â∏∏ËßÅÈóÆÈ¢ò': {
                'ÈªÑÂè∂': 'Ê§çÁâ©ÈªÑÂè∂ÂèØËÉΩÊòØÂõ†‰∏∫ÊµáÊ∞¥ËøáÂ§ö„ÄÅÂÖâÁÖß‰∏çË∂≥„ÄÅËê•ÂÖª‰∏çËâØÁ≠âÂéüÂõ†„ÄÇÂª∫ËÆÆÊ£ÄÊü•Ê†πÁ≥ªÁä∂ÂÜµÔºåË∞ÉÊï¥ÊµáÊ∞¥ÂíåÂÖâÁÖßÊù°‰ª∂„ÄÇ',
                'ÁÉÇÊ†π': 'ÁÉÇÊ†π‰∏ªË¶ÅÊòØÂõ†‰∏∫ÊµáÊ∞¥ËøáÂ§öÊàñÊéíÊ∞¥‰∏çËâØÂØºËá¥ÔºåË¶ÅÂèäÊó∂Â§ÑÁêÜÂπ∂Ë∞ÉÊï¥ÊµáÊ∞¥ÊñπÂºè„ÄÇÂèØ‰ª•ÈÄÇÂΩìÊ∑ªÂä†ÁèçÁè†Â≤©ÊîπÂñÑÊéíÊ∞¥„ÄÇ',
                'Ëô´ÂÆ≥': 'ÂèëÁé∞Ëô´ÂÆ≥Ë¶ÅÂèäÊó∂ÈöîÁ¶ªÊ§çÁâ©ÔºåÂèØ‰ª•Áî®Ê∏©ÂíåÁöÑÊùÄËô´ÂâÇÊàñÂ§©ÁÑ∂È©±Ëô´ÊñπÊ≥ïÂ§ÑÁêÜ„ÄÇÈ¢ÑÈò≤ËÉú‰∫éÊ≤ªÁñóÔºåË¶ÅÂÆöÊúüÊ£ÄÊü•Ê§çÁâ©„ÄÇ',
                'ÂæíÈïø': 'Ê§çÁâ©ÂæíÈïøÈÄöÂ∏∏ÊòØÂõ†‰∏∫ÂÖâÁÖß‰∏çË∂≥ÔºåÈúÄË¶ÅË∞ÉÊï¥Ê§çÁâ©‰ΩçÁΩÆÔºåÂ¢ûÂä†ÂÖâÁÖßÊó∂Èó¥„ÄÇ',
                'Âè∂Â∞ñÂèëÈªë': 'Âè∂Â∞ñÂèëÈªëÂèØËÉΩÊòØÁº∫Ê∞¥ÊàñÁ©∫Ê∞îÊπøÂ∫¶Ëøá‰ΩéÔºåÂèØ‰ª•Â¢ûÂä†ÊµáÊ∞¥È¢ëÁéáÊàñ‰ΩøÁî®Âä†ÊπøÂô®„ÄÇ'
            },
            'ÂÖªÊä§ÊäÄÂ∑ß': {
                'Êó•Â∏∏ÁÆ°ÁêÜ': 'ÂÆöÊúüËßÇÂØüÊ§çÁâ©Áä∂ÊÄÅÔºå‰øùÊåÅÁõÜÂúüÈÄÇÂ∫¶ÊπøÊ∂¶ÔºåÈÄÇÊó∂‰øÆÂâ™Êï¥ÂΩ¢Ôºå‰øùÊåÅÁéØÂ¢ÉÈÄöÈ£é„ÄÇ',
                'Â≠£ËäÇÂèòÂåñ': 'Ê†πÊçÆÂ≠£ËäÇË∞ÉÊï¥ÊµáÊ∞¥È¢ëÁéáÂíåÂÖâÁÖßÊó∂Èó¥ÔºåÂÜ¨Â≠£Ê≥®ÊÑè‰øùÊöñÔºåÂ§èÂ≠£Ê≥®ÊÑèÈÅÆÈò≥ÂíåÈÄöÈ£é„ÄÇ',
                'ÁéØÂ¢ÉË¶ÅÊ±Ç': 'ÂÆ§ÂÜÖÊ∏©Â∫¶ÊúÄÂ•Ω‰øùÊåÅÂú®18-25‚ÑÉÔºåÁõ∏ÂØπÊπøÂ∫¶Âú®40-60%ÔºåÈÅøÂÖçÁ©∫Ë∞ÉÁõ¥Âêπ„ÄÇ',
                'Â∑•ÂÖ∑‰ΩøÁî®': '‰ΩøÁî®‰∏ì‰∏öÁöÑÂõ≠Ëâ∫Â∑•ÂÖ∑ÔºåÂ¶ÇÂâ™ÂàÄ„ÄÅÈì≤Â≠êÁ≠âÔºå‰ΩøÁî®ÂâçË¶ÅÊ∂àÊØíÔºå‰ΩøÁî®ÂêéË¶ÅÊ∏ÖÊ¥Å„ÄÇ',
                'ËÇ•ÊñôÈÄâÊã©': 'Ê†πÊçÆÊ§çÁâ©ÁîüÈïøÈò∂ÊÆµÈÄâÊã©ÂêàÈÄÇÁöÑËÇ•ÊñôÔºåÁîüÈïøÊúü‰ΩøÁî®Ê∞ÆËÇ•ÔºåÂºÄËä±Êúü‰ΩøÁî®Á£∑ÈíæËÇ•„ÄÇ'
            },
            'Ê§çÁâ©ÈÄâÊã©': {
                'Êñ∞ÊâãÂÖ•Èó®': 'Âª∫ËÆÆÈÄâÊã©Â•ΩÂÖªÊ¥ªÁöÑÊ§çÁâ©ÔºåÂ¶ÇÁªøËêù„ÄÅÂ∏∏Êò•Ëó§„ÄÅÈæüËÉåÁ´πÁ≠âÔºåËøô‰∫õÊ§çÁâ©ÈÄÇÂ∫îËÉΩÂäõÂº∫„ÄÇ',
                'ÂáÄÂåñÁ©∫Ê∞î': 'Â∏∏ËßÅÁöÑÂÆ§ÂÜÖÁ©∫Ê∞îÂáÄÂåñÊ§çÁâ©ÊúâÁªøËêù„ÄÅËôéÂ∞æÂÖ∞„ÄÅÂêäÂÖ∞„ÄÅËä¶ËçüÁ≠âÔºåÂèØ‰ª•Âê∏Êî∂Áî≤ÈÜõÁ≠âÊúâÂÆ≥Áâ©Ë¥®„ÄÇ',
                'ËßÇËä±Ê§çÁâ©': 'ÈÄÇÂêàÂÆ§ÂÜÖÁßçÊ§çÁöÑËßÇËä±Ê§çÁâ©ÊúâËù¥Ëù∂ÂÖ∞„ÄÅ‰∏ÄÂìÅÁ∫¢„ÄÅËåâËéâËä±Á≠âÔºåÈúÄË¶ÅÊ≥®ÊÑèÂÖâÁÖßÂíåÊ∏©Â∫¶Ë¶ÅÊ±Ç„ÄÇ',
                'ËßÇÂè∂Ê§çÁâ©': 'Â∏∏ËßÅÁöÑËßÇÂè∂Ê§çÁâ©ÊúâÈæüËÉåÁ´π„ÄÅÊ©°ÁöÆÊ†ë„ÄÅÂèëË¥¢Ê†ëÁ≠âÔºå‰∏ªË¶ÅËßÇËµèÂÖ∂Âè∂ÁâáÂΩ¢ÊÄÅÂíåÈ¢úËâ≤„ÄÇ',
                'Èò≥Âè∞ÁßçÊ§ç': 'Èò≥Âè∞ÈÄÇÂêàÁßçÊ§çÂêëÊó•Ëëµ„ÄÅÊúàÂ≠£„ÄÅÁª£ÁêÉÁ≠âÂñúÂÖâÊ§çÁâ©ÔºåÊ≥®ÊÑèÈò≤È£éÂíåÊéíÊ∞¥„ÄÇ'
            }
        };

        function sendMessage() {
            const input = document.getElementById('userInput');
            const message = input.value.trim();
            if (message) {
                addMessage(message, 'user');
                generateResponse(message);
                input.value = '';
            }
        }

        function askQuestion(question) {
            addMessage(question, 'user');
            generateResponse(question);
        }

        function addMessage(text, sender) {
            const messages = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}`;
            messageDiv.innerHTML = `
                <div class="avatar">${sender === 'user' ? 'üë§' : 'üå±'}</div>
                <div class="text">${text}</div>
            `;
            messages.appendChild(messageDiv);
            messages.scrollTop = messages.scrollHeight;
        }

        function generateResponse(question) {
            let response = 'Êä±Ê≠âÔºåÊàëÊöÇÊó∂Êó†Ê≥ïÂõûÁ≠îËøô‰∏™ÈóÆÈ¢ò„ÄÇËØ∑Â∞ùËØïËØ¢ÈóÆÊúâÂÖ≥Ê§çÁâ©ÂÖªÊä§„ÄÅÊµáÊ∞¥„ÄÅÂÖâÁÖßÁ≠âÊñπÈù¢ÁöÑÈóÆÈ¢ò„ÄÇ';
            
            for (const [key, [category, subcategory]] of Object.entries(keywords)) {
                if (question.toLowerCase().includes(key)) {
                    if (plantKnowledge[category] && plantKnowledge[category][subcategory]) {
                        response = plantKnowledge[category][subcategory];
                        break;
                    }
                }
            }

            setTimeout(() => {
                addMessage(response, 'bot');
            }, 500);
        }

        // Ê∑ªÂä†ÂõûËΩ¶ÂèëÈÄÅÂäüËÉΩ
        document.getElementById('userInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // ÊéßÂà∂Âä©ÊâãÊòæÁ§∫/ÈöêËóè
        function toggleAssistant() {
            const assistant = document.getElementById('floatingAssistant');
            const trigger = document.getElementById('assistantTrigger');
            if (assistant.style.display === 'none' || !assistant.style.display) {
                assistant.style.display = 'block';
                trigger.style.display = 'none';
            } else {
                assistant.style.display = 'none';
                trigger.style.display = 'flex';
            }
        }

        function closeAssistant() {
            document.getElementById('floatingAssistant').style.display = 'none';
            document.getElementById('assistantTrigger').style.display = 'flex';
        }

        // ‰ΩøÂä©ÊâãÂèØÊãñÂä®
        const assistantHeader = document.querySelector('.assistant-header');
        const floatingAssistant = document.getElementById('floatingAssistant');
        let isDragging = false;
        let currentX;
        let currentY;
        let initialX;
        let initialY;
        let xOffset = 0;
        let yOffset = 0;

        assistantHeader.addEventListener('mousedown', dragStart);
        document.addEventListener('mousemove', drag);
        document.addEventListener('mouseup', dragEnd);

        function dragStart(e) {
            initialX = e.clientX - xOffset;
            initialY = e.clientY - yOffset;

            if (e.target === assistantHeader) {
                isDragging = true;
            }
        }

        function drag(e) {
            if (isDragging) {
                e.preventDefault();
                currentX = e.clientX - initialX;
                currentY = e.clientY - initialY;
                xOffset = currentX;
                yOffset = currentY;
                setTranslate(currentX, currentY, floatingAssistant);
            }
        }

        function setTranslate(xPos, yPos, el) {
            el.style.transform = `translate3d(${xPos}px, ${yPos}px, 0)`;
        }

        function dragEnd() {
            initialX = currentX;
            initialY = currentY;
            isDragging = false;
        }
    </script>
</body>
</html>
